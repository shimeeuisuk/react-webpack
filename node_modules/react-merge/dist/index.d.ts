import { PathElement, anyObject } from "objects-fns";
interface MergeStateResult {
    state: any;
    changes?: any;
}
export interface MergeOptions {
    path?: PathElement[];
    replace?: replaceType;
    arrays?: (path: PathElement[], arrayA: any[], arrayB: any[]) => any[];
    diff?: boolean;
    del?: boolean;
    delSymbol?: any;
    noSymbol?: boolean;
}
export declare type replaceType = {
    [key: string]: boolean | replaceType;
} | boolean | ((path: PathElement[], objectA: anyObject, objectB: anyObject) => boolean);
declare function mergeState(state: any, source: any, options?: MergeOptions): MergeStateResult;
declare const merge: any;
export { merge, mergeState };
